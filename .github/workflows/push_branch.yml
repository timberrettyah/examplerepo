name: GitHub Actions Demo
on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master
      - '!main'   # excludes master
jobs:
  cicd-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "This job's status is ${{ job.status }}."
      - run: sudo apt install -y graphviz graphviz-dev
      - run: echo "Install requirements"|
          python3 -m venv venv |
          . venv/bin/activate |
          python3 -m pip install -r requirements.txt
      - run: echo "Install additional packages"|
          . venv/bin/activate |
          python3 -m pip install dbConnect databricks-cli dbx delta-spark mlflow
      - run: echo "Install package itself"|
          . venv/bin/activate |
          python3 -m pip install -e ".[dev]"
      # Step 3: run linter and tests
      - name: Run pre-commit hooks
        run: pre-commit run --all-file
      - run: |
            . venv/bin/activate |
            pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=html
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: htmlcov/
